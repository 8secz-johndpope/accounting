# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-14 16:40
from __future__ import unicode_literals

import uuid

from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import localflavor.au.models
import localflavor.generic.models
import vies.models

import accounting.bank.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The universally unique identifier for this bank.', verbose_name='UUID')),
                ('name', models.CharField(help_text='The official name of the bank.', max_length=80)),
                ('address', models.ForeignKey(blank=True, help_text='The address of this bank.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='banks', to='account.Address')),
            ],
            options={
                'verbose_name': 'Bank',
                'verbose_name_plural': 'Banks',
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The universally unique identifier for this bank account.', verbose_name='UUID')),
                ('currency', djmoney.models.fields.CurrencyField(default='EUR', help_text='The currency expected to be held in this bank account.', max_length=3)),
                ('type', models.CharField(choices=[('checking', 'Checking Account'), ('savings', 'Savings Account')], help_text='Whether this is a checking or savings account.', max_length=30)),
                ('iban', localflavor.generic.models.IBANField(blank=True, help_text="The unique International Bank Account Number of the provider's bank account.", include_countries=None, max_length=34, null=True, use_nordea_extensions=False)),
                ('bic', localflavor.generic.models.BICField(blank=True, help_text='The 11-character SWIFT / BIC (Business Identifier Code) code used to identify a bank or financial institution globally.', max_length=11, null=True)),
                ('abn', localflavor.au.models.AUBusinessNumberField(blank=True, help_text='The 11-character Australian Business Number used to identify business entities in Australia.', max_length=11, null=True)),
                ('bsb', accounting.bank.fields.AUBankStateBranchField(blank=True, help_text='The 6-character Bank State Branch code used as a bank identifier in Australia.', max_length=6, null=True)),
                ('vat', vies.models.VATINField(blank=True, help_text='The Value Added Tax identification number used in and required by some countries. This can also be used to store a General Sales Tax (GST) identification number.', max_length=14, null=True)),
                ('account_number', models.CharField(blank=True, help_text='The bank account number used to help identify the account. Required for only some countries.', max_length=30, null=True)),
                ('routing_number', models.CharField(blank=True, help_text='The bank account routing number used to help identify the account. Required for only some countries.', max_length=30, null=True)),
                ('bank', models.ForeignKey(help_text='The bank to which this bank account belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='bank.Bank')),
                ('user_account', models.ForeignKey(help_text='The user account that this bank account is linked to. A user can have multiple bank accounts associated with their user account.', on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='account.Account')),
            ],
            options={
                'verbose_name': 'Bank Account',
                'verbose_name_plural': 'Bank Accounts',
            },
        ),
    ]
